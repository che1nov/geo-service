services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: geo-service
    ports:
      - "8080:8080"
      - "6060:6060"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=geo_service
      - REDIS_ADDR=redis:6379
      - DADATA_API_KEY=${DADATA_API_KEY}
      - DADATA_URL=https://suggestions.dadata.ru/suggestions/api/4_1/rs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'

  grafana:
    image: che1nov/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards/
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: geo_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  grafana_data:
  postgres_data:
  redis_data: